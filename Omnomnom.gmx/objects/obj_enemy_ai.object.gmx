<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>starting_size = irandom_range(3,10);
current_size = starting_size/50;
image_xscale = current_size;
image_yscale = current_size;
size_increase = 0.5;
dir_facing = 90;

color = make_color_hsv(irandom_range(0,255),255,255);
image_blend = color;

hsp = 0;
vsp = 0;
hsp_max = 10;
vsp_max = 10;

moving_ver = false;
moving_hor = false;

accel = 0.5;
decel = 0.5;

ate_food = false;

key_left = false;
key_right = false;
key_up = false;
key_down = false;
key_space = false;

AI_death_system = part_system_create();
part_system_depth(AI_death_system,10);
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_disk);
part_type_size(particle1,2*current_size,2*current_size,0,0);
part_type_scale(particle1,1,1);
part_type_color1(particle1,color);
part_type_alpha1(particle1,1);
part_type_speed(particle1,2,10,-0.05,0);
part_type_direction(particle1,0,359,0,0);
part_type_gravity(particle1,0,270);
part_type_orientation(particle1,0,0,0,0,1);
part_type_blend(particle1,1);
part_type_life(particle1,30,60);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_food) //its here to prevent errors
{
    closest=instance_nearest(x,y,obj_food) //finds closest instance of weaktruck 
    move_towards_point(closest.x,closest.y,5) //moves to weaktruck, change 4 to however fast you want it to move
}
else
{
//add code for what you want it to do if weaktruck doesn't exist
}

//horizontal movement and accelerations
if (key_right)
{
    if (hsp &lt; hsp_max-accel) hsp += accel;
    if (hsp &gt;= hsp_max-accel) hsp = hsp_max;
}

if (key_left)
{
    if (hsp &gt; -hsp_max+accel) hsp -= accel;
    if (hsp &lt;= -hsp_max+accel) hsp = -hsp_max;
}

if (!key_right &amp;&amp; !key_left) || (key_right &amp;&amp; key_left)
{
    if (hsp &gt;= decel) hsp -= decel;
    if (hsp &lt;= -decel) hsp += decel;
    if (hsp &gt; -decel) &amp;&amp; (hsp &lt; decel) hsp = 0;
}

//vertical movement and accelerations
if (key_down)
{
    if (vsp &lt; vsp_max-accel) vsp += accel;
    if (vsp &gt;= vsp_max-accel) vsp = vsp_max;
}

if (key_up)
{
    if (vsp &gt; -vsp_max+accel) vsp -= accel;
    if (vsp &lt;= -vsp_max+accel) vsp = -vsp_max;
}

if (((!key_down) &amp;&amp; (!key_up)) || ((key_down) &amp;&amp; (key_up)))
{
    if (vsp &gt;= decel) vsp -= decel;
    if (vsp &lt;= -decel) vsp += decel;
    if (vsp &gt; -decel) &amp;&amp; (vsp &lt; decel) vsp = 0;
}

//fire bullet
if(key_space){
    instance_create(x,y,obj_player_1_bullet);
}

//directions facing
if (key_left){
    if(key_up){
        dir_facing = 135;
    }
    else if(key_down){
        dir_facing = 225;
    }
    else{
        dir_facing = 180;
    }
}
if (key_right){
    if(key_up){
        dir_facing = 45;
    }
    else if(key_down){
        dir_facing = 315;
    }
    else{
        dir_facing = 0;
    }
}
if ((key_up) &amp;&amp; !(key_right || key_left)){
    dir_facing = 90;
}
if ((key_down) &amp;&amp; !(key_right || key_left)){
    dir_facing = 270;
}

image_angle = dir_facing;

//bounce when you hit a solid wall
if(place_meeting(x,y-10,obj_wall)){
    vsp += 10;
}
if(place_meeting(x,y+10,obj_wall)){
    vsp -= 10;
}
if(place_meeting(x-10,y,obj_wall)){
    hsp += 10;
}
if(place_meeting(x+10,y,obj_wall)){
    hsp -= 10;
}


//apply movements
x += hsp;
y += vsp;

//set desired target to player
desired_target = obj_player_1;

image_angle = point_direction(x,y,desired_target.x,desired_target.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_food">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_size += size_increase/50;
image_xscale = current_size;
image_yscale = current_size;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(current_size &gt; (obj_player_1.current_size)){
    game_restart();
}
else if(current_size &lt; (obj_player_1.current_size)){
    obj_player_1.current_size += current_size/3;
    obj_player_1.image_xscale = obj_player_1.current_size;
    obj_player_1.image_yscale = obj_player_1.current_size;
    instance_destroy();
    emitter1 = part_emitter_create(AI_death_system);
    part_emitter_region(AI_death_system,emitter1,x-20,x+20,y-20,y+20,1,1);
    part_emitter_burst(AI_death_system,emitter1,particle1,30);

}
else{

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_1_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_size -= size_increase/25;
image_xscale = current_size;
image_yscale = current_size;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
